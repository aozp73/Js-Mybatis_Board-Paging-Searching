<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.jsmybatis_pagingsearching.domain.BoardMapper">

    <insert id="insert">
        insert into board_tb(title, content, user_id, views, created_at)
        values(#{title}, #{content}, #{userId}, #{views}, now())
    </insert>

    <select id="findAll" resultType="Board">
        select * from board_tb
    </select>

    <select id="findAllWithUserForList" resultType="com.example.jsmybatis_pagingsearching.web.board.dto.BoardList_OutDTO">
        SELECT bt.*,
               ut.username,
               FORMATDATETIME(bt.created_at, 'yyyy/MM/dd') AS createdAtFormat,
               COUNT(ct.id) AS commentCount,
               COUNT(DISTINCT bt.id) As totalCount
        FROM board_tb bt
        INNER JOIN user_tb ut ON bt.user_id = ut.id
        LEFT OUTER JOIN comment_tb ct ON bt.id = ct.board_id

        <where>
            <if test="searchType != null and searchKeyword != null and searchKeyword != ''">
                <choose>
                    <when test="searchType == 'title'">
                        AND bt.title LIKE '%' || #{searchKeyword} || '%'
                    </when>
                    <when test="searchType == 'author'">
                        AND ut.username LIKE '%' || #{searchKeyword} || '%'
                    </when>
                </choose>
             </if>
        </where>

        GROUP BY bt.id
        ORDER BY bt.created_at DESC
        LIMIT #{pageSize} OFFSET #{offset};
    </select>

    <select id="findAllWithUserForDetail" resultType="com.example.jsmybatis_pagingsearching.web.board.dto.BoardDetail_OutDTO">
    <![CDATA[
        SELECT bt.*,
               ut.username,
               bt.created_at AS createdAtFormat,
               COUNT(ct.id) AS commentCount
        FROM board_tb bt
        INNER JOIN user_tb ut ON bt.user_id = ut.id
        LEFT OUTER JOIN comment_tb ct ON bt.id = ct.board_id
        WHERE bt.id = #{boardId}
        GROUP BY bt.id
        ORDER BY bt.created_at DESC;
        ]]>
    </select>
    <select id="findAllWithCommentForDetail" resultType="com.example.jsmybatis_pagingsearching.web.board.dto.BoardDetail_OutDTO$CommentDTO">
        <![CDATA[
        select ct.*,
               ut.username,
               ct.created_at,
        from comment_tb ct
        INNER JOIN user_tb ut ON ct.user_id = ut.id
        where ct.board_id = #{boardId}
        ]]>
    </select>

    <select id="findById" resultType="Board">
        select * from board_tb where id = #{id}
    </select>

    <update id="updateById">
        update board_tb 
           set title = #{title},
               content = #{content},
               views = #{views}
         where id = #{id}
    </update>

    <delete id="deleteById">
        delete from board_tb where id = #{id}
    </delete>

</mapper>